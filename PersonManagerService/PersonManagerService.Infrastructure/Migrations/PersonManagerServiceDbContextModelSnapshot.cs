// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonManagerService.Infrastructure.Contexts;

#nullable disable

namespace PersonManagerService.Persistance.Migrations
{
    [DbContext(typeof(PersonManagerServiceDbContext))]
    partial class PersonManagerServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PersonManagerService.Domain.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", "dbo");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSkill", b =>
                {
                    b.Property<Guid>("PersonSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonSkillId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonSkills", "dbo");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSocialMediaAccount", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocialMediaAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId", "SocialMediaAccountId");

                    b.HasIndex("SocialMediaAccountId");

                    b.ToTable("PersonSocialMediaAccounts", "dbo");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.SocialMediaAccount", b =>
                {
                    b.Property<Guid>("SocialMediaAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialMediaAccountId");

                    b.ToTable("SocialMediaAccounts", "dbo");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSkill", b =>
                {
                    b.HasOne("PersonManagerService.Domain.Models.Person", "Person")
                        .WithMany("PersonSkills")
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSocialMediaAccount", b =>
                {
                    b.HasOne("PersonManagerService.Domain.Models.Person", "Person")
                        .WithMany("PersonSocialMediaAccounts")
                        .HasForeignKey("PersonId");

                    b.HasOne("PersonManagerService.Domain.Models.SocialMediaAccount", "SocialMediaAccount")
                        .WithMany("PersonSocialMediaAccounts")
                        .HasForeignKey("SocialMediaAccountId");

                    b.Navigation("Person");

                    b.Navigation("SocialMediaAccount");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.Person", b =>
                {
                    b.Navigation("PersonSkills");

                    b.Navigation("PersonSocialMediaAccounts");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.SocialMediaAccount", b =>
                {
                    b.Navigation("PersonSocialMediaAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
