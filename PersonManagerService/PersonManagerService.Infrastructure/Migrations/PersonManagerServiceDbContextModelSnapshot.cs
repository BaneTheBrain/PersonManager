// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonManagerService.Infrastructure.Contexts;

#nullable disable

namespace PersonManagerService.Persistance.Migrations
{
    [DbContext(typeof(PersonManagerServiceDbContext))]
    partial class PersonManagerServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PersonManagerService.Domain.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", "dbo");

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("4e131d98-f5d1-4a18-95b7-bb9ec8bd4c7a"),
                            FirstName = "Pera",
                            LastName = "Zdera"
                        },
                        new
                        {
                            PersonId = new Guid("e590b2a7-fca2-496a-b863-9917ceb21001"),
                            FirstName = "Mitar",
                            LastName = "Miric"
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSkill", b =>
                {
                    b.Property<Guid>("PersonSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonSkillId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonSkills", "dbo");

                    b.HasData(
                        new
                        {
                            PersonSkillId = new Guid("5984f429-93d9-4650-8d5c-7902bcacf866"),
                            Name = "debeo",
                            PersonId = new Guid("4e131d98-f5d1-4a18-95b7-bb9ec8bd4c7a")
                        },
                        new
                        {
                            PersonSkillId = new Guid("7e09b932-231b-43e0-bd6c-440b9e750211"),
                            Name = "spor",
                            PersonId = new Guid("4e131d98-f5d1-4a18-95b7-bb9ec8bd4c7a")
                        },
                        new
                        {
                            PersonSkillId = new Guid("a17b80a3-05d5-454f-b6d4-04e77d43001d"),
                            Name = "brz",
                            PersonId = new Guid("e590b2a7-fca2-496a-b863-9917ceb21001")
                        },
                        new
                        {
                            PersonSkillId = new Guid("c8691848-e94b-46ae-b49a-219343e29a88"),
                            Name = "peva",
                            PersonId = new Guid("e590b2a7-fca2-496a-b863-9917ceb21001")
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSocialMediaAccount", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocialMediaAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId", "SocialMediaAccountId");

                    b.HasIndex("SocialMediaAccountId");

                    b.ToTable("PersonSocialMediaAccounts", "dbo");

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("4e131d98-f5d1-4a18-95b7-bb9ec8bd4c7a"),
                            SocialMediaAccountId = new Guid("5f2fb333-4da7-4742-b0ba-f568116d726e"),
                            Address = "pera@fb"
                        },
                        new
                        {
                            PersonId = new Guid("e590b2a7-fca2-496a-b863-9917ceb21001"),
                            SocialMediaAccountId = new Guid("5f2fb333-4da7-4742-b0ba-f568116d726e"),
                            Address = "mita@fb"
                        },
                        new
                        {
                            PersonId = new Guid("e590b2a7-fca2-496a-b863-9917ceb21001"),
                            SocialMediaAccountId = new Guid("79df559b-e2f6-4612-ad48-21229ea2eb75"),
                            Address = "mita@tw"
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.SocialMediaAccount", b =>
                {
                    b.Property<Guid>("SocialMediaAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialMediaAccountId");

                    b.ToTable("SocialMediaAccounts", "dbo");

                    b.HasData(
                        new
                        {
                            SocialMediaAccountId = new Guid("5f2fb333-4da7-4742-b0ba-f568116d726e"),
                            Type = "Facebook"
                        },
                        new
                        {
                            SocialMediaAccountId = new Guid("79df559b-e2f6-4612-ad48-21229ea2eb75"),
                            Type = "Twitter"
                        },
                        new
                        {
                            SocialMediaAccountId = new Guid("f574a1b6-caa9-43af-a018-a98d9a5c8d00"),
                            Type = "LinkedIn"
                        },
                        new
                        {
                            SocialMediaAccountId = new Guid("2283f630-2ed0-4444-b238-ae3eb59ef51e"),
                            Type = "Telegram"
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSkill", b =>
                {
                    b.HasOne("PersonManagerService.Domain.Models.Person", "Person")
                        .WithMany("PersonSkills")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSocialMediaAccount", b =>
                {
                    b.HasOne("PersonManagerService.Domain.Models.Person", "Person")
                        .WithMany("PersonSocialMediaAccounts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonManagerService.Domain.Models.SocialMediaAccount", "SocialMediaAccount")
                        .WithMany("PersonSocialMediaAccounts")
                        .HasForeignKey("SocialMediaAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Person");

                    b.Navigation("SocialMediaAccount");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.Person", b =>
                {
                    b.Navigation("PersonSkills");

                    b.Navigation("PersonSocialMediaAccounts");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.SocialMediaAccount", b =>
                {
                    b.Navigation("PersonSocialMediaAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
