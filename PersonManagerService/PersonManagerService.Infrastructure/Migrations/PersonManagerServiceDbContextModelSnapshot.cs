// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonManagerService.Infrastructure.Contexts;

#nullable disable

namespace PersonManagerService.Infrastructure.Migrations
{
    [DbContext(typeof(PersonManagerServiceDbContext))]
    partial class PersonManagerServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PersonManagerService.Domain.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", "dbo");

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("66933f1a-d11e-4813-b1df-51f9e1ed584d"),
                            FirstName = "Pera",
                            LastName = "Zdera"
                        },
                        new
                        {
                            PersonId = new Guid("bf78be81-691d-4b0d-a99c-58d9b2d35950"),
                            FirstName = "Mita",
                            LastName = "Brzi"
                        },
                        new
                        {
                            PersonId = new Guid("98ede1ea-68a5-4ba0-8976-b176eed0d2a4"),
                            FirstName = "Zika",
                            LastName = "Klinika"
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSkill", b =>
                {
                    b.Property<Guid>("PersonSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonSkillId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonSkills", "dbo");

                    b.HasData(
                        new
                        {
                            PersonSkillId = new Guid("c33961d6-8831-4075-b207-9f18469bc423"),
                            Name = "debeo",
                            PersonId = new Guid("66933f1a-d11e-4813-b1df-51f9e1ed584d")
                        },
                        new
                        {
                            PersonSkillId = new Guid("27eadae8-6ea4-4ed4-aff2-57e526df96a0"),
                            Name = "spor",
                            PersonId = new Guid("66933f1a-d11e-4813-b1df-51f9e1ed584d")
                        },
                        new
                        {
                            PersonSkillId = new Guid("9f88b16a-c278-4e80-9185-7ecc5ae30fa0"),
                            Name = "brz",
                            PersonId = new Guid("bf78be81-691d-4b0d-a99c-58d9b2d35950")
                        },
                        new
                        {
                            PersonSkillId = new Guid("78c93bcb-7c8f-4c22-b2eb-9bfaf62978a1"),
                            Name = "jak",
                            PersonId = new Guid("bf78be81-691d-4b0d-a99c-58d9b2d35950")
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSocialMediaAccount", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocialMediaAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId", "SocialMediaAccountId");

                    b.HasIndex("SocialMediaAccountId");

                    b.ToTable("PersonSocialMediaAccounts", "dbo");

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("66933f1a-d11e-4813-b1df-51f9e1ed584d"),
                            SocialMediaAccountId = new Guid("aeb97361-b3ec-4bd4-ab5f-ba4f47cebb30"),
                            Address = "pera@fb"
                        },
                        new
                        {
                            PersonId = new Guid("bf78be81-691d-4b0d-a99c-58d9b2d35950"),
                            SocialMediaAccountId = new Guid("aeb97361-b3ec-4bd4-ab5f-ba4f47cebb30"),
                            Address = "mita@fb"
                        },
                        new
                        {
                            PersonId = new Guid("bf78be81-691d-4b0d-a99c-58d9b2d35950"),
                            SocialMediaAccountId = new Guid("3d6935ac-1b0d-4c92-9fdf-c649d390bc83"),
                            Address = "mita@tw"
                        },
                        new
                        {
                            PersonId = new Guid("98ede1ea-68a5-4ba0-8976-b176eed0d2a4"),
                            SocialMediaAccountId = new Guid("3d6935ac-1b0d-4c92-9fdf-c649d390bc83"),
                            Address = "zika@tw"
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.SocialMediaAccount", b =>
                {
                    b.Property<Guid>("SocialMediaAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialMediaAccountId");

                    b.ToTable("SocialMediaAccounts", "dbo");

                    b.HasData(
                        new
                        {
                            SocialMediaAccountId = new Guid("aeb97361-b3ec-4bd4-ab5f-ba4f47cebb30"),
                            Type = "Facebook"
                        },
                        new
                        {
                            SocialMediaAccountId = new Guid("3d6935ac-1b0d-4c92-9fdf-c649d390bc83"),
                            Type = "Twitter"
                        },
                        new
                        {
                            SocialMediaAccountId = new Guid("ce27c608-a53c-407b-9722-ad48559cc984"),
                            Type = "LinkedIn"
                        },
                        new
                        {
                            SocialMediaAccountId = new Guid("708abcd6-3f39-4870-89e9-a4a316056dbc"),
                            Type = "Telegram"
                        });
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSkill", b =>
                {
                    b.HasOne("PersonManagerService.Domain.Models.Person", "Person")
                        .WithMany("PersonSkills")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.PersonSocialMediaAccount", b =>
                {
                    b.HasOne("PersonManagerService.Domain.Models.Person", "Person")
                        .WithMany("PersonSocialMediaAccounts")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonManagerService.Domain.Models.SocialMediaAccount", "SocialMediaAccount")
                        .WithMany("PersonSocialMediaAccounts")
                        .HasForeignKey("SocialMediaAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Person");

                    b.Navigation("SocialMediaAccount");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.Person", b =>
                {
                    b.Navigation("PersonSkills");

                    b.Navigation("PersonSocialMediaAccounts");
                });

            modelBuilder.Entity("PersonManagerService.Domain.Models.SocialMediaAccount", b =>
                {
                    b.Navigation("PersonSocialMediaAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
